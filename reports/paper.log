Traceback (most recent call last):
  File "/usr/share/miniconda3/envs/computo/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda3/envs/computo/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda3/envs/computo/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda3/envs/computo/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda3/envs/computo/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/usr/share/miniconda3/envs/computo/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda3/envs/computo/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda3/envs/computo/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
## Tracker with SORT 
from collections import defaultdict
import cv2
from sort.sort import track as sort_tracker

print('Tracking with SORT...')
print('--- Begin SORT internal logs')
sort_tracker(detections_dir='data/external_detections', output_dir='sort/results')
print('--- End')

def read_sort_output(filename):
    """ Reads the output .txt of Sort (or other tracking algorithm)
    """
    dict_frames = defaultdict(list)
    with open(filename) as f:
        for line in f:
            items = line[:-1].split(",")
            frame = int(items[0])
            objnum = int(items[1])
            x = float(items[2])
            y = float(items[3])
            dict_frames[int(items[0])].append((objnum, x, y))
    return  dict_frames


def build_image(frames, trackers, image_shape=(135,240), downsampling=2*4):
    """ Builds a full image with consecutive frames and their displayed trackers
    frames: a list of K np.array
    trackers: a list of K trackers. Each tracker is a per frame list of tracked objects
    """
    K = len(frames)
    assert len(trackers) == K
    font = cv2.FONT_HERSHEY_COMPLEX
    output_img=np.zeros((image_shape[0], image_shape[1]*K, 3), dtype=np.uint8)
    object_ids = []
    for tracker in trackers:
        for detection in tracker:
            object_ids.append(detection[0])
    min_object_id = min(object_ids)
    for i in range(K):
        frame = cv2.cvtColor(cv2.resize(frames[i], image_shape[::-1]), cv2.COLOR_BGR2RGB)
        for detection in trackers[i]:
            cv2.putText(frame, f'{detection[0]-min_object_id +1}', (int(detection[1]/downsampling)+10, int(detection[2]/downsampling)+10), font, 0.5, (255, 0, 0), 1, cv2.LINE_AA)

        output_img[:,i*image_shape[1]:(i+1)*image_shape[1],:] = frame
    return output_img
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mImportError[0m                               Traceback (most recent call last)
Input [0;32mIn [4][0m, in [0;36m<cell line: 4>[0;34m()[0m
[1;32m      2[0m [38;5;28;01mfrom[39;00m [38;5;21;01mcollections[39;00m [38;5;28;01mimport[39;00m defaultdict
[1;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mcv2[39;00m
[0;32m----> 4[0m [38;5;28;01mfrom[39;00m [38;5;21;01msort[39;00m[38;5;21;01m.[39;00m[38;5;21;01msort[39;00m [38;5;28;01mimport[39;00m track [38;5;28;01mas[39;00m sort_tracker
[1;32m      6[0m [38;5;28mprint[39m([38;5;124m'[39m[38;5;124mTracking with SORT...[39m[38;5;124m'[39m)
[1;32m      7[0m [38;5;28mprint[39m([38;5;124m'[39m[38;5;124m--- Begin SORT internal logs[39m[38;5;124m'[39m)

File [0;32m~/work/computo_paper/computo_paper/sort/sort.py:23[0m, in [0;36m<module>[0;34m[0m
[1;32m     21[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m
[1;32m     22[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m
[0;32m---> 23[0m [43mmatplotlib[49m[38;5;241;43m.[39;49m[43muse[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43mTkAgg[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m     24[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m
[1;32m     25[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpatches[39;00m [38;5;28;01mas[39;00m [38;5;21;01mpatches[39;00m

File [0;32m/usr/share/miniconda3/envs/computo/lib/python3.9/site-packages/matplotlib/__init__.py:1144[0m, in [0;36muse[0;34m(backend, force)[0m
[1;32m   1139[0m [38;5;28;01mif[39;00m plt [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m   1140[0m     [38;5;28;01mtry[39;00m:
[1;32m   1141[0m         [38;5;66;03m# we need this import check here to re-raise if the[39;00m
[1;32m   1142[0m         [38;5;66;03m# user does not have the libraries to support their[39;00m
[1;32m   1143[0m         [38;5;66;03m# chosen backend installed.[39;00m
[0;32m-> 1144[0m         [43mplt[49m[38;5;241;43m.[39;49m[43mswitch_backend[49m[43m([49m[43mname[49m[43m)[49m
[1;32m   1145[0m     [38;5;28;01mexcept[39;00m [38;5;167;01mImportError[39;00m:
[1;32m   1146[0m         [38;5;28;01mif[39;00m force:

File [0;32m/usr/share/miniconda3/envs/computo/lib/python3.9/site-packages/matplotlib/pyplot.py:275[0m, in [0;36mswitch_backend[0;34m(newbackend)[0m
[1;32m    272[0m     current_framework [38;5;241m=[39m cbook[38;5;241m.[39m_get_running_interactive_framework()
[1;32m    273[0m     [38;5;28;01mif[39;00m (current_framework [38;5;129;01mand[39;00m required_framework
[1;32m    274[0m             [38;5;129;01mand[39;00m current_framework [38;5;241m!=[39m required_framework):
[0;32m--> 275[0m         [38;5;28;01mraise[39;00m [38;5;167;01mImportError[39;00m(
[1;32m    276[0m             [38;5;124m"[39m[38;5;124mCannot load backend [39m[38;5;132;01m{!r}[39;00m[38;5;124m which requires the [39m[38;5;132;01m{!r}[39;00m[38;5;124m interactive [39m[38;5;124m"[39m
[1;32m    277[0m             [38;5;124m"[39m[38;5;124mframework, as [39m[38;5;132;01m{!r}[39;00m[38;5;124m is currently running[39m[38;5;124m"[39m[38;5;241m.[39mformat(
[1;32m    278[0m                 newbackend, required_framework, current_framework))
[1;32m    280[0m _log[38;5;241m.[39mdebug([38;5;124m"[39m[38;5;124mLoaded backend [39m[38;5;132;01m%s[39;00m[38;5;124m version [39m[38;5;132;01m%s[39;00m[38;5;124m.[39m[38;5;124m"[39m,
[1;32m    281[0m            newbackend, backend_mod[38;5;241m.[39mbackend_version)
[1;32m    283[0m rcParams[[38;5;124m'[39m[38;5;124mbackend[39m[38;5;124m'[39m] [38;5;241m=[39m rcParamsDefault[[38;5;124m'[39m[38;5;124mbackend[39m[38;5;124m'[39m] [38;5;241m=[39m newbackend

[0;31mImportError[0m: Cannot load backend 'TkAgg' which requires the 'tk' interactive framework, as 'headless' is currently running
ImportError: Cannot load backend 'TkAgg' which requires the 'tk' interactive framework, as 'headless' is currently running

